import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class MenuScreen extends JFrame {
    private JPanel menuPanel;
    private JLabel menuLabel;
    private JPanel pizzaPanel;
    private JPanel drinkPanel;
    private JLabel pizzaMenuLabel;
    private JLabel pizzaSizeLabel;
    private JComboBox pizzaSizeBox;
    private JLabel pizzaCrustLabel;
    private JComboBox pizzaCrustBox;
    private JLabel pizzaToppingsLabel;
    private JPanel pizzaToppingsPanel;
    private JCheckBox pepperoniCheckBox;
    private JCheckBox mushroomCheckBox;
    private JCheckBox sausageCheckBox;
    private JCheckBox greenPepperCheckBox;
    private JCheckBox baconCheckBox;
    private JCheckBox onionCheckBox;
    private JCheckBox blackOlivesCheckBox;
    private JCheckBox extraCheeseCheckBox;
    private JButton addPizzaToOrderButton;
    private JLabel drinkLabel;
    private JLabel drinkVarietyLabel;
    private JComboBox drinkVarietyBox;
    private JLabel drinkSizeLabel;
    private JComboBox drinkSizeBox;
    private JLabel drinkIceLabel;
    private JComboBox drinkIceBox;
    private JButton addDrinkToOrderButton;
    private JButton printToReceiptButton;
    private JScrollPane cartDisplayScrollPane;
    private JTextArea cartDisplayTextArea;

    public MenuScreen(String title) {
        super(title);

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(menuPanel);
        this.pack();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        menuPanel = new JPanel();
        menuPanel.setLayout(new GridLayoutManager(4, 2, new Insets(10, 10, 10, 10), -1, -1));
        menuPanel.setAlignmentX(0.5f);
        menuPanel.setAlignmentY(0.5f);
        menuLabel = new JLabel();
        menuLabel.setText("Mom and Pop's Pizzeria: Menu");
        menuPanel.add(menuLabel, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pizzaPanel = new JPanel();
        pizzaPanel.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        menuPanel.add(pizzaPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pizzaPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        pizzaMenuLabel = new JLabel();
        pizzaMenuLabel.setText("Pizza");
        pizzaPanel.add(pizzaMenuLabel, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pizzaSizeLabel = new JLabel();
        pizzaSizeLabel.setText("Size");
        pizzaPanel.add(pizzaSizeLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pizzaSizeBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Small");
        defaultComboBoxModel1.addElement("Medium");
        defaultComboBoxModel1.addElement("Large");
        defaultComboBoxModel1.addElement("Extra-Large");
        pizzaSizeBox.setModel(defaultComboBoxModel1);
        pizzaPanel.add(pizzaSizeBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pizzaCrustLabel = new JLabel();
        pizzaCrustLabel.setText("Crust");
        pizzaPanel.add(pizzaCrustLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pizzaCrustBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        defaultComboBoxModel2.addElement("Hand-Tossed");
        defaultComboBoxModel2.addElement("Stuffed Crust");
        pizzaCrustBox.setModel(defaultComboBoxModel2);
        pizzaPanel.add(pizzaCrustBox, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pizzaToppingsLabel = new JLabel();
        pizzaToppingsLabel.setText("Toppings");
        pizzaPanel.add(pizzaToppingsLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pizzaToppingsPanel = new JPanel();
        pizzaToppingsPanel.setLayout(new GridLayoutManager(2, 4, new Insets(0, 0, 0, 0), -1, -1));
        pizzaPanel.add(pizzaToppingsPanel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        pepperoniCheckBox = new JCheckBox();
        pepperoniCheckBox.setText("Pepperoni");
        pizzaToppingsPanel.add(pepperoniCheckBox, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        mushroomCheckBox = new JCheckBox();
        mushroomCheckBox.setText("Mushroom");
        pizzaToppingsPanel.add(mushroomCheckBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sausageCheckBox = new JCheckBox();
        sausageCheckBox.setText("Sausage");
        pizzaToppingsPanel.add(sausageCheckBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        greenPepperCheckBox = new JCheckBox();
        greenPepperCheckBox.setText("Green Pepper");
        pizzaToppingsPanel.add(greenPepperCheckBox, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        baconCheckBox = new JCheckBox();
        baconCheckBox.setText("Bacon");
        pizzaToppingsPanel.add(baconCheckBox, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        onionCheckBox = new JCheckBox();
        onionCheckBox.setText("Onion");
        pizzaToppingsPanel.add(onionCheckBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        blackOlivesCheckBox = new JCheckBox();
        blackOlivesCheckBox.setText("Black Olives");
        pizzaToppingsPanel.add(blackOlivesCheckBox, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        extraCheeseCheckBox = new JCheckBox();
        extraCheeseCheckBox.setText("Extra Cheese");
        pizzaToppingsPanel.add(extraCheeseCheckBox, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addPizzaToOrderButton = new JButton();
        addPizzaToOrderButton.setText("Add Pizza to Order");
        pizzaPanel.add(addPizzaToOrderButton, new GridConstraints(4, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        drinkPanel = new JPanel();
        drinkPanel.setLayout(new GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        menuPanel.add(drinkPanel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        drinkPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        drinkLabel = new JLabel();
        drinkLabel.setText("Drinks");
        drinkPanel.add(drinkLabel, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        drinkVarietyLabel = new JLabel();
        drinkVarietyLabel.setText("Variety");
        drinkPanel.add(drinkVarietyLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        drinkVarietyBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel3 = new DefaultComboBoxModel();
        defaultComboBoxModel3.addElement("Coke");
        defaultComboBoxModel3.addElement("Diet Coke");
        defaultComboBoxModel3.addElement("Sprite");
        defaultComboBoxModel3.addElement("Dr. Pepper");
        defaultComboBoxModel3.addElement("Water");
        drinkVarietyBox.setModel(defaultComboBoxModel3);
        drinkPanel.add(drinkVarietyBox, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        drinkSizeLabel = new JLabel();
        drinkSizeLabel.setText("Size");
        drinkPanel.add(drinkSizeLabel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        drinkSizeBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel4 = new DefaultComboBoxModel();
        defaultComboBoxModel4.addElement("Small");
        defaultComboBoxModel4.addElement("Medium");
        defaultComboBoxModel4.addElement("Large");
        defaultComboBoxModel4.addElement("Extra-Large");
        drinkSizeBox.setModel(defaultComboBoxModel4);
        drinkPanel.add(drinkSizeBox, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        drinkIceLabel = new JLabel();
        drinkIceLabel.setText("Ice");
        drinkPanel.add(drinkIceLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        drinkIceBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel5 = new DefaultComboBoxModel();
        defaultComboBoxModel5.addElement("Regular");
        defaultComboBoxModel5.addElement("Light");
        drinkIceBox.setModel(defaultComboBoxModel5);
        drinkPanel.add(drinkIceBox, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addDrinkToOrderButton = new JButton();
        addDrinkToOrderButton.setText("Add Drink to Order");
        drinkPanel.add(addDrinkToOrderButton, new GridConstraints(4, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        printToReceiptButton = new JButton();
        printToReceiptButton.setText("Print to Receipt");
        menuPanel.add(printToReceiptButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cartDisplayScrollPane = new JScrollPane();
        menuPanel.add(cartDisplayScrollPane, new GridConstraints(1, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        cartDisplayTextArea = new JTextArea();
        cartDisplayScrollPane.setViewportView(cartDisplayTextArea);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return menuPanel;
    }

}
